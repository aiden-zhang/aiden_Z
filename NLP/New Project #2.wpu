#!wing
#!version=7.0
##################################################################
# Wing project file : User-specific branch                       #
##################################################################
[user attributes]
debug.breakpoints = {loc('ch03/train.py'): {20L: (0,
        None,
        1,
        0),
        28: (0,
             None,
             1,
             0)},
                     loc('ch07/train_seq2seq.py'): {42L: (0,
        None,
        1,
        0),
        50L: (0,
              None,
              1,
              0)},
                     loc('ch08/attention_seq2seq.py'): {50L: (0,
        None,
        1,
        0)},
                     loc('ch08/train.py'): {43L: (0,
        None,
        1,
        0)},
                     loc('common/trainer.py'): {39L: (0,
        None,
        1,
        0)},
                     loc('untitled-1.py'): {3L: (0,
        None,
        1,
        0),
        12: (0,
             None,
             1,
             0)}}
debug.err-values = {loc('ch01/show_spiral_dataset.py'): {},
                    loc('ch03/train.py'): {},
                    loc('ch07/train_seq2seq.py'): {},
                    loc('ch08/train.py'): {},
                    loc('untitled-1.py'): {}}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'lbCZQH8XJtsn2tZbl3csWyov8B'\
        'zDEBgw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.2493315508021391,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [(0,),
        (2,),
        (3,),
        (4,),
        (5,),
        (6,),
        (7,),
        (9,)],
                                 'selected-nodes': [(6,
        4)],
                                 'top-node': (3,
        5)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/mnist_show.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/mnist_show.py'),
                      'img')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/neuralnet_mnist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/neuralnet_mnist.py'),
                      'accuracy_cnt')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/neuralnet_mnist_batch.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch03/neuralnet_mnist_batch.py'),
                      'accuracy_cnt')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_1d.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_1d.py'),
                      'function_1')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_2d.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_2d.py'),
                      'function_2')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_method.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_method.py'),
                      'function_2')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_simplenet.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/gradient_simplenet.py'),
                      'dW')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/train_neuralnet.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/train_neuralnet.py'),
                      'batch_mask')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/two_layer_net.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/ch04/two_layer_net.py'),
                      'TwoLayerNet')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/common/gradient.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/common/gradient.py'),
                      'numerical_gradient')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/dataset/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/dataset/mnist.py'),
                      '')]},
        loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/dataset/mnist.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../\xe3\x80\x90\xe6\xba\x90\xe4\xbb\xa3\xe7\xa0\x81\xe3\x80\x91\xe6\xb7\xb1\xe5\xba\xa6\xe5\xad\xa6\xe4\xb9\xa0\xe5\x85\xa5\xe9\x97\xa8\xef\xbc\x9a\xe5\x9f\xba\xe4\xba\x8ePython\xe7\x9a\x84\xe7\x90\x86\xe8\xae\xba\xe4\xb8\x8e\xe5\xae\x9e\xe7\x8e\xb0/dataset/mnist.py'),
                      'dataset_dir')]},
        loc('file:c:/ProgramData/Anaconda3/Lib/site-packages/numpy/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('file:c:/ProgramData/Anaconda3/Lib/site-packages/numpy/conftest.py'),
                      '')]},
        loc('file:c:/ProgramData/Anaconda3/Lib/site-packages/numpy/core/numeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('file:c:/ProgramData/Anaconda3/Lib/site-packages/numpy/core/numeric.py'),
                      'allclose')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': []}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [2,
                          2],
        'notebook_display': 'normal',
        'notebook_percent': 0.38426453819840367,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 0L,
                       'sel-line-start': 0L,
                       'selection_end': 0L,
                       'selection_start': 0L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 145L,
                       'selection_end': 145L,
                       'selection_start': 145L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {'filter-text': ''}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('ch07/seq2seq.py'),
        {'attrib-starts': [('Seq2seq|0|',
                            94),
                           ('Seq2seq|0|.forward|0|',
                            104)],
         'code-line': '        score = self.decoder.forward(decoder_xs, h)\r'\
                      '\n',
         'first-line': 98L,
         'folded-linenos': [],
         'sel-line': 109L,
         'sel-line-start': 3673L,
         'selection_end': 3673L,
         'selection_start': 3673L,
         'zoom': 0L},
        1635297057.83],
        [loc('ch08/attention_seq2seq.py'),
         {'attrib-starts': [('AttentionDecoder|0|',
                             22),
                            ('AttentionDecoder|0|.forward|0|',
                             45)],
          'code-line': '        h = enc_hs[:,-1] #\xe8\xbe\x93\xe5\x85\xa512'\
                       '8x29x256 \xe8\xbe\x93\xe5\x87\xba128x256\xe5\x8f\x96'\
                       '\xe4\xba\x86\xe6\x9c\x80\xe5\x90\x8e\xe4\xb8\x80\xe4'\
                       '\xb8\xaa\xe9\x9a\x90\xe8\x97\x8f\xe7\x8a\xb6\xe6\x80'\
                       '\x81h\r\n',
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 46L,
          'sel-line-start': 1507L,
          'selection_end': 1593L,
          'selection_start': 1593L,
          'zoom': 0L},
         1635297237.758],
        (loc('common/time_layers.py'),
         {'attrib-starts': [('TimeLSTM|0|',
                             174),
                            ('TimeLSTM|0|.set_state|0|',
                             229)],
          'code-line': '        self.h, self.c = h, c\r\n',
          'first-line': 216L,
          'folded-linenos': [],
          'sel-line': 230L,
          'sel-line-start': 6453L,
          'selection_end': 6453L,
          'selection_start': 6453L,
          'zoom': 0L},
         1635297245.524),
        [loc('ch08/attention_seq2seq.py'),
         {'attrib-starts': [('AttentionDecoder|0|',
                             22),
                            ('AttentionDecoder|0|.forward|0|',
                             45)],
          'code-line': '        dec_hs = self.lstm.forward(out)\r\n',
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1735L,
          'selection_end': 1735L,
          'selection_start': 1735L,
          'zoom': 0L},
         1635297330.158],
        [loc('ch08/train.py'),
         {'attrib-starts': [],
          'code-line': '    trainer.fit(x_train, t_train, max_epoch=1,\r\n',
          'first-line': 33L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1220L,
          'selection_end': 1220L,
          'selection_start': 1220L,
          'zoom': 0L},
         1635297334.318],
        [loc('common/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             10),
                            ('Trainer|0|.fit|0|',
                             18)],
          'code-line': '                loss = model.forward(batch_x, batch_'\
                       't)\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1340L,
          'selection_end': 1340L,
          'selection_start': 1340L,
          'zoom': 0L},
         1635297335.827],
        [loc('ch07/seq2seq.py'),
         {'attrib-starts': [('Seq2seq|0|',
                             94),
                            ('Seq2seq|0|.forward|0|',
                             104)],
          'code-line': '        h = self.encoder.forward(xs) #128x128   \xe6'\
                       '\x97\xa5\xe6\x9c\x9f\xe8\xbd\xac\xe6\x8d\xa2128x29x2'\
                       '56\r\n',
          'first-line': 101L,
          'folded-linenos': [],
          'sel-line': 108L,
          'sel-line-start': 3601L,
          'selection_end': 3601L,
          'selection_start': 3601L,
          'zoom': 0L},
         1635297359.061],
        [loc('ch08/attention_seq2seq.py'),
         {'attrib-starts': [('AttentionDecoder|0|',
                             22),
                            ('AttentionDecoder|0|.forward|0|',
                             45)],
          'code-line': '        dec_hs = self.lstm.forward(out)\r\n',
          'first-line': 39L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1735L,
          'selection_end': 1735L,
          'selection_start': 1735L,
          'zoom': 0L},
         1635297373.645],
        [loc('common/time_layers.py'),
         {'attrib-starts': [('TimeLSTM|0|',
                             174),
                            ('TimeLSTM|0|.forward|0|',
                             184)],
          'code-line': '            layer = LSTM(*self.params) #\xe4\xb8\x80'\
                       '\xe4\xb8\xaaTimeLSTM\xe9\x9c\x80\xe8\xa6\x81\xe5\x88'\
                       '\x9d\xe5\xa7\x8b\xe5\x8c\x9635\xe4\xb8\xaaLSTM\r\n',
          'first-line': 188L,
          'folded-linenos': [],
          'sel-line': 198L,
          'sel-line-start': 5401L,
          'selection_end': 5401L,
          'selection_start': 5401L,
          'zoom': 0L},
         1635297444.949],
        [loc('ch08/train.py'),
         {'attrib-starts': [],
          'code-line': '    trainer.fit(x_train, t_train, max_epoch=1,\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1220L,
          'selection_end': 1220L,
          'selection_start': 1220L,
          'zoom': 0L},
         1635297451.014],
        [loc('common/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             10),
                            ('Trainer|0|.fit|0|',
                             18)],
          'code-line': '                loss = model.forward(batch_x, batch_'\
                       't)\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1340L,
          'selection_end': 1340L,
          'selection_start': 1340L,
          'zoom': 0L},
         1635297452.612],
        [loc('ch08/attention_seq2seq.py'),
         {'attrib-starts': [('AttentionDecoder|0|',
                             22),
                            ('AttentionDecoder|0|.forward|0|',
                             45)],
          'code-line': '        dec_hs = self.lstm.forward(out)\r\n',
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 50L,
          'sel-line-start': 1735L,
          'selection_end': 1735L,
          'selection_start': 1735L,
          'zoom': 0L},
         1635297506.631],
        [loc('ch08/train.py'),
         {'attrib-starts': [],
          'code-line': '    trainer.fit(x_train, t_train, max_epoch=1,\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1220L,
          'selection_end': 1220L,
          'selection_start': 1220L,
          'zoom': 0L},
         1635297508.334],
        [loc('common/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             10),
                            ('Trainer|0|.fit|0|',
                             18)],
          'code-line': '                loss = model.forward(batch_x, batch_'\
                       't)\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1340L,
          'selection_end': 1340L,
          'selection_start': 1340L,
          'zoom': 0L},
         1635297509.348],
        [loc('ch08/attention_seq2seq.py'),
         {'attrib-starts': [('AttentionDecoder|0|',
                             22),
                            ('AttentionDecoder|0|.forward|0|',
                             45)],
          'code-line': '        out = self.embed.forward(xs)\r\n',
          'first-line': 36L,
          'folded-linenos': [],
          'sel-line': 49L,
          'sel-line-start': 1697L,
          'selection_end': 1697L,
          'selection_start': 1697L,
          'zoom': 0L},
         1635297533.932],
        [loc('ch08/train.py'),
         {'attrib-starts': [],
          'code-line': '    trainer.fit(x_train, t_train, max_epoch=1,\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1220L,
          'selection_end': 1220L,
          'selection_start': 1220L,
          'zoom': 0L},
         1635297538.283],
        [loc('common/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             10),
                            ('Trainer|0|.fit|0|',
                             18)],
          'code-line': '                if max_grad is not None:\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 41L,
          'sel-line-start': 1542L,
          'selection_end': 1582L,
          'selection_start': 1582L,
          'zoom': 0L},
         1635297561.462],
        [loc('ch07/seq2seq.py'),
         {'attrib-starts': [('Seq2seq|0|',
                             94),
                            ('Seq2seq|0|.forward|0|',
                             104)],
          'code-line': '        decoder_xs, decoder_ts = ts[:, :-1], ts[:, 1'\
                       ':] #\xe5\x8a\xa0\xe6\xb3\x95128x4  \xe6\x97\xa5\xe6'\
                       '\x9c\x9f\xe8\xbd\xac\xe6\x8d\xa2128x10\r\n',
          'first-line': 98L,
          'folded-linenos': [],
          'sel-line': 106L,
          'sel-line-start': 3510L,
          'selection_end': 3540L,
          'selection_start': 3530L,
          'zoom': 0L},
         1635297632.046],
        [loc('ch08/train.py'),
         {'attrib-starts': [],
          'code-line': '    trainer.fit(x_train, t_train, max_epoch=1,\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 42L,
          'sel-line-start': 1220L,
          'selection_end': 1220L,
          'selection_start': 1220L,
          'zoom': 0L},
         1635297634.705],
        [loc('common/trainer.py'),
         {'attrib-starts': [('Trainer|0|',
                             10),
                            ('Trainer|0|.fit|0|',
                             18)],
          'code-line': '                loss = model.forward(batch_x, batch_'\
                       't)\r\n',
          'first-line': 29L,
          'folded-linenos': [],
          'sel-line': 38L,
          'sel-line-start': 1340L,
          'selection_end': 1340L,
          'selection_start': 1340L,
          'zoom': 0L},
         1635297636.395]],
        20),
        'current-loc': loc('ch08/attention_seq2seq.py'),
        'editor-state-list': [(loc('ch08/attention_layer.py'),
                               {'attrib-starts': [('TimeAttention|0|',
        83),
        ('TimeAttention|0|.__init__|0|',
         84)],
                                'code-line': '        self.attention_weights'\
        ' = None\r\n',
                                'first-line': 75L,
                                'folded-linenos': [],
                                'sel-line': 87L,
                                'sel-line-start': 2159L,
                                'selection_end': 2159L,
                                'selection_start': 2159L,
                                'zoom': 0L}),
                              (loc('ch08/attention_seq2seq.py'),
                               {'attrib-starts': [('AttentionDecoder|0|',
        22),
        ('AttentionDecoder|0|.__init__|0|',
         23)],
                                'code-line': '            self.params += lay'\
        'er.params\r\n',
                                'first-line': 18L,
                                'folded-linenos': [],
                                'sel-line': 42L,
                                'sel-line-start': 1389L,
                                'selection_end': 1428L,
                                'selection_start': 1422L,
                                'zoom': 0L}),
                              (loc('ch07/seq2seq.py'),
                               {'attrib-starts': [('Seq2seq|0|',
        94),
        ('Seq2seq|0|.forward|0|',
         104)],
                                'code-line': '        decoder_xs, decoder_ts'\
        ' = ts[:, :-1], ts[:, 1:] #\xe5\x8a\xa0\xe6\xb3\x95128x4  \xe6\x97\xa5'\
        '\xe6\x9c\x9f\xe8\xbd\xac\xe6\x8d\xa2128x10\r\n',
                                'first-line': 98L,
                                'folded-linenos': [],
                                'sel-line': 106L,
                                'sel-line-start': 3510L,
                                'selection_end': 3540L,
                                'selection_start': 3530L,
                                'zoom': 0L}),
                              (loc('common/time_layers.py'),
                               {'attrib-starts': [('TimeLSTM|0|',
        174),
        ('TimeLSTM|0|.forward|0|',
         184)],
                                'code-line': '        Wx, Wh, b = self.param'\
        's\r\n',
                                'first-line': 180L,
                                'folded-linenos': [],
                                'sel-line': 185L,
                                'sel-line-start': 5012L,
                                'selection_end': 5012L,
                                'selection_start': 5012L,
                                'zoom': 0L}),
                              (loc('ch08/train.py'),
                               {'attrib-starts': [],
                                'code-line': '    trainer.fit(x_train, t_tra'\
        'in, max_epoch=1,\r\n',
                                'first-line': 27L,
                                'folded-linenos': [],
                                'sel-line': 42L,
                                'sel-line-start': 1220L,
                                'selection_end': 1220L,
                                'selection_start': 1220L,
                                'zoom': 0L}),
                              (loc('common/trainer.py'),
                               {'attrib-starts': [('Trainer|0|',
        10),
        ('Trainer|0|.fit|0|',
         18)],
                                'code-line': '                loss = model.f'\
        'orward(batch_x, batch_t)\r\n',
                                'first-line': 29L,
                                'folded-linenos': [],
                                'sel-line': 38L,
                                'sel-line-start': 1340L,
                                'selection_end': 1340L,
                                'selection_start': 1340L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('ch08/attention_layer.py'),
         loc('ch08/attention_seq2seq.py'),
         loc('ch07/seq2seq.py'),
         loc('common/time_layers.py'),
         loc('ch08/train.py'),
         loc('common/trainer.py')]),
                               'open_files': [u'ch07/seq2seq.py',
        u'ch08/attention_layer.py',
        u'ch08/train.py',
        u'common/time_layers.py',
        u'common/trainer.py',
        u'ch08/attention_seq2seq.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.375497215592681},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           2),
                          1635294437.27),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.676056338028169},
                 'splits': 2,
                 'tab_location': 'left',
                 'traversal_pos': ((1,
                                    2),
                                   1634561023.226),
                 'user_data': {}},
        'window-alloc': (7,
                         -1,
                         160,
                         146)}]}
guimgr.recent-documents = [loc('ch08/attention_seq2seq.py'),
                           loc('common/trainer.py'),
                           loc('ch08/train.py'),
                           loc('ch07/seq2seq.py')]
guimgr.visual-state = {loc('ch01/show_spiral_dataset.py'): {'attrib-starts': [],
        'code-line': 'x, t = spiral.load_data()\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 169L,
        'selection_end': 188L,
        'selection_start': 188L,
        'zoom': 0L},
                       loc('ch01/train.py'): {'attrib-starts': [],
        'code-line': 'hidden_size = 10\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 286L,
        'selection_end': 302L,
        'selection_start': 302L,
        'zoom': 0L},
                       loc('ch01/train_custom_loop.py'): {'attrib-starts': [],
        'code-line': 'data_size = len(x)\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 496L,
        'selection_end': 505L,
        'selection_start': 496L,
        'zoom': 0L},
                       loc('ch01/two_layer_net.py'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 15L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('ch03/train.py'): {'attrib-starts': [],
        'code-line': 'import sys\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 17L,
        'selection_end': 27L,
        'selection_start': 27L,
        'zoom': 0L},
                       loc('ch04/train.py'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('ch05/train_custom_loop.py'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('ch06/train_rnnlm.py'): {'attrib-starts': [],
        'code-line': '# coding: utf-8\r\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('ch07/peeky_seq2seq.py'): {'attrib-starts': [],
        'code-line': 'from seq2seq import Seq2seq, Encoder\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 86L,
        'selection_end': 86L,
        'selection_start': 86L,
        'zoom': 0L},
                       loc('ch07/seq2seq.py'): {'attrib-starts': [('Encoder|'\
        '0|',
        7),
        ('Encoder|0|.__init__|0|',
         8)],
        'code-line': '        V, D, H = vocab_size, wordvec_size, hidden_siz'\
                     'e\r\n',
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 211L,
        'selection_end': 211L,
        'selection_start': 211L,
        'zoom': 0L},
                       loc('ch07/train_seq2seq.py'): {'attrib-starts': [],
        'code-line': 'from peeky_seq2seq import PeekySeq2seq\r\n',
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 387L,
        'selection_end': 387L,
        'selection_start': 387L,
        'zoom': 0L},
                       loc('ch08/attention_seq2seq.py'): {'attrib-starts': [('A'\
        'ttentionSeq2seq|0|',
        91),
        ('AttentionSeq2seq|0|.__init__|0|',
         92)],
        'code-line': '        self.encoder = AttentionEncoder(*args)\r\n',
        'first-line': 84L,
        'folded-linenos': [],
        'sel-line': 94L,
        'sel-line-start': 2980L,
        'selection_end': 2980L,
        'selection_start': 2980L,
        'zoom': 0L},
                       loc('ch08/train.py'): {'attrib-starts': [],
        'code-line': 'model = AttentionSeq2seq(vocab_size, wordvec_size, hid'\
                     'den_size)\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 926L,
        'selection_end': 926L,
        'selection_start': 926L,
        'zoom': 0L},
                       loc('common/optimizer.py'): {'attrib-starts': [('Adam'\
        '|0|',
        100),
        ('Adam|0|.__init__|0|',
         104)],
        'code-line': '        self.lr = lr\r\n',
        'first-line': 89L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 2782L,
        'selection_end': 2782L,
        'selection_start': 2782L,
        'zoom': 0L},
                       loc('common/time_layers.py'): {'attrib-starts': [('LS'\
        'TM|0|',
        100),
        ('LSTM|0|.forward|0|',
         114)],
        'code-line': '    def forward(self, x, h_prev, c_prev):\r\n',
        'first-line': 104L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 3187L,
        'selection_end': 3218L,
        'selection_start': 3212L,
        'zoom': 0L},
                       loc('common/trainer.py'): {'attrib-starts': [('Traine'\
        'r|0|',
        10),
        ('Trainer|0|.fit|0|',
         18)],
        'code-line': '            idx = numpy.random.permutation(numpy.arang'\
                     'e(data_size))\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 863L,
        'selection_end': 926L,
        'selection_start': 926L,
        'zoom': 0L},
                       loc('untitled-1.py'): {'attrib-starts': [],
        'code-line': 'import numpy as np  \r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 43L,
        'selection_end': 43L,
        'selection_start': 43L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'c:\\ProgramData\\Anaconda3\\python.exe')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
testing.stored-results = (1,
                          [],
                          {})
